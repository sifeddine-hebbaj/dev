services:
  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: apollo
      POSTGRES_PASSWORD: pass
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - app-network
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - app-network
    restart: unless-stopped

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "echo", "ruok", "|", "nc", "localhost", "2181"]
      interval: 10s
      timeout: 10s
      retries: 3

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"  # Enable auto-creation of topics
    depends_on:
      zookeeper:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "kafka-broker-api-versions", "--bootstrap-server", "kafka:9092" ]
      interval: 10s
      timeout: 10s
      retries: 5


  discovery-service:
    build: ./discovery-service
    container_name: discovery-dock
    ports:
      - "8761:8761"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8761/actuator/health || exit 1"]
      interval: 10s
      retries: 4
    networks:
      - app-network

  config-service:
    build: ./config-service
    container_name: config-dock
    ports:
      - "9999:9999"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9999/actuator/health || exit 1"]
      interval: 10s
      retries: 4
    environment:
      - DISCOVERY_SERVICE_URL=http://discovery-dock:8761/eureka
    depends_on:
      discovery-service:
        condition: service_healthy
    networks:
      - app-network

  etudiant-service:
    build: ./etudiant-service
    container_name: etudiant-dock
    ports:
      - "8080:8080"
    expose:
      - "8080"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1"]
    environment:
      - DISCOVERY_SERVICE_URL=http://discovery-dock:8761/eureka
      - CONFIG_SERVICE_URL=http://config-dock:9999
    depends_on:
      config-service:
        condition: service_healthy
    networks:
      - app-network

  cours-service:
    build: ./cours-service
    container_name: cours-dock
    ports:
      - "8081:8081"
    expose:
      - "8081"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8081/actuator/health || exit 1"]
    environment:
      - DISCOVERY_SERVICE_URL=http://discovery-dock:8761/eureka
      - CONFIG_SERVICE_URL=http://config-dock:9999
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/gestion
      - SPRING_DATASOURCE_USERNAME=apollo
      - SPRING_DATASOURCE_PASSWORD=pass
    depends_on:
      config-service:
        condition: service_healthy
    networks:
      - app-network

  inscription-service:
    build: ./inscription-service
    container_name: inscription-dock
    ports:
      - "8084:8084"
    expose:
      - "8084"
    environment:
      - DISCOVERY_SERVICE_URL=http://discovery-dock:8761/eureka
      - CONFIG_SERVICE_URL=http://config-dock:9999
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/gestion
      - SPRING_DATASOURCE_USERNAME=apollo
      - SPRING_DATASOURCE_PASSWORD=pass
    depends_on:
      etudiant-service:
        condition: service_healthy
      cours-service:
        condition: service_healthy
      config-service:
        condition: service_healthy
    networks:
      - app-network

  resultat-service:
    build: ./resultat-service
    container_name: resultat-dock
    ports:
      - "8082:8082"
    expose:
      - "8082"
    environment:
      - DISCOVERY_SERVICE_URL=http://discovery-dock:8761/eureka
      - CONFIG_SERVICE_URL=http://config-dock:9999
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/gestion
      - SPRING_DATASOURCE_USERNAME=apollo
      - SPRING_DATASOURCE_PASSWORD=pass
      - SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_KAFKA_CONSUMER_GROUP_ID=gradeGroup
      - SPRING_KAFKA_CONSUMER_AUTO_OFFSET_RESET=earliest
      - SPRING_KAFKA_CONSUMER_ENABLE_AUTO_COMMIT=true
      - SPRING_KAFKA_PRODUCER_KEY_SERIALIZER=org.apache.kafka.common.serialization.StringSerializer
      - SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER=org.apache.kafka.common.serialization.StringSerializer
      - SPRING_KAFKA_CONSUMER_KEY_DESERIALIZER=org.apache.kafka.common.serialization.StringDeserializer
      - SPRING_KAFKA_CONSUMER_VALUE_DESERIALIZER=org.apache.kafka.common.serialization.StringDeserializer
    depends_on:
      kafka:
        condition: service_healthy
      discovery-service:
        condition: service_healthy
    networks:
      - app-network


  prof-service:
    build: ./prof-service
    container_name: prof-dock
    ports:
      - "8083:8083"
    expose:
      - "8083"
    environment:
      - DISCOVERY_SERVICE_URL=http://discovery-dock:8761/eureka
      - CONFIG_SERVICE_URL=http://config-dock:9999
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/gestion
      - SPRING_DATASOURCE_USERNAME=apollo
      - SPRING_DATASOURCE_PASSWORD=pass
    depends_on:
      config-service:
        condition: service_healthy
    networks:
      - app-network

  communication-service:
    build: ./communication-service
    container_name: communication-dock
    ports:
      - "7081:7081"
    expose:
      - "7081"
    environment:
      - DISCOVERY_SERVICE_URL=http://discovery-dock:8761/eureka
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_KAFKA_CONSUMER_GROUP_ID:notification-group
      - SPRING_KAFKA_CONSUMER_AUTO_OFFSET_RESET:earliest
      - SPRING_KAFKA_PRODUCER_KEY_SERIALIZER:org.apache.kafka.common.serialization.StringSerializer
      - SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER:org.apache.kafka.common.serialization.StringSerializer
    depends_on:
      kafka:
        condition: service_healthy
      discovery-service:
        condition: service_healthy
    networks:
      - app-network

  gateway-service:
    build: ./gateway-service
    container_name: gateway-dock
    ports:
      - "8888:8888"
    expose:
      - "8888"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8888/actuator/health || exit 1"]
      interval: 10s
      retries: 4
    environment:
      - DISCOVERY_SERVICE_URL=http://discovery-dock:8761/eureka
    depends_on:
      discovery-service:
        condition: service_healthy
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres:
  pgadmin:
