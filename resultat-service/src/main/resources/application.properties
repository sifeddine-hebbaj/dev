spring.application.name=resultat-service
server.port=8082

spring.config.import=optional:configserver:${CONFIG_SERVICE_URL}
spring.cloud.config.enabled=false

spring.h2.console.enabled=false
spring.cloud.discovery.enabled=true
eureka.client.service-url.defaultZone=${DISCOVERY_SERVICE_URL:http://localhost:8761/eureka}
management.endpoints.web.exposure.include=health,info,refresh

# PostgreSQL database connection settings
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://postgres:5432/gestion}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:apollo}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:pass}
spring.datasource.driver-class-name=org.postgresql.Driver

# Hibernate settings (optional, for JPA/Hibernate configuration)
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.default_schema=public



# Kafka Consumer
spring.kafka.consumer.bootstrap-servers=${SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS:kafka:9092}
spring.kafka.consumer.group-id=${SPRING_KAFKA_CONSUMER_GROUP_ID:gradeGroup}
spring.kafka.consumer.auto-offset-reset=${SPRING_KAFKA_CONSUMER_AUTO_OFFSET_RESET:earliest}
spring.kafka.consumer.enable-auto-commit=${SPRING_KAFKA_CONSUMER_ENABLE_AUTO_COMMIT:true}
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Kafka Producer
spring.kafka.producer.bootstrap-servers=${SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS:kafka:9092}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
